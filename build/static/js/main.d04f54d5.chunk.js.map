{"version":3,"sources":["components/Menu/cityBackgrounds.js","components/Menu/Desctop/styles.js","components/Menu/Geo/styles.js","components/Menu/Geo/emblems.js","components/Menu/Geo/index.js","components/Menu/Desctop/index.js","components/Menu/Mobile/styles.js","components/Menu/Mobile/index.js","store/AC/cities.js","store/actions/cities.js","components/Menu/index.js","components/Map/index.js","store/AC/map.js","store/actions/map.js","components/CitiesSelector/styles.js","components/CitiesSelector/index.js","containers/Main/styles.js","containers/Main/index.js","store/AC/geodata.js","store/actions/geodata.js","containers/App/index.js","store/reducers/cities.js","store/reducers/map.js","store/reducers/geodata.js","store/reducers/index.js","store/sagas/cities.js","store/sagas/index.js","store/index.js","index.js","images/logo_dark.svg","images/citiesBG/novosibirsk.jpg","images/citiesBG/krasnoyarsk.jpg","images/emblems/novosibirsk.svg","images/emblems/krasnoyarsk.svg"],"names":["novosibirsk","backgroundImage","backgroundSize","backgroundRepeat","krasnoyarsk","makeStyles","theme","backgrounds","root","width","flexShrink","rootPaper","header","position","height","searchContainer","display","justifyContent","margin","spacing","padding","backgroundColor","borderRadius","shape","border","search","darkBG","paddingTop","alignItems","overflowX","cityName","marginLeft","color","palette","text","emblemContainer","grow","flexGrow","changeCityButton","breakpoints","up","background","emblem","Geo","props","fetchCities","setModal","loading","city","titleCity","classes","useStyles","useEffect","className","src","emblems","alt","Typography","variant","IconButton","onClick","Edit","DesctopMenu","selectedCity","Hidden","smDown","implementation","Drawer","paper","cn","title","LogoDark","InputBase","placeholder","name","openButton","top","left","zIndex","index","paddingRight","logo","closeMenuButton","MobileMenu","useState","isOpen","setOpen","toggleMenu","value","mdUp","Fab","Menu","SwipeableDrawer","open","onOpen","onClose","type","setError","error","changeCity","id","connect","cities","selectedCityId","citiesList","data","dispatch","bindActionCreators","find","Desctop","Mobile","map","geodata","lat","lng","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","url","Marker","coords","latitude","longitude","changeCoordinates","borderBottom","closeButton","right","loadingText","rotate","animation","transform","actions","borderTop","isSelectorOpen","setSelectedCityId","Dialog","maxWidth","fullWidth","DialogTitle","Close","DialogContent","Loop","List","component","ListItem","button","key","selected","ListItemText","ListItemSecondaryAction","Check","DialogActions","Button","localStorage","setItem","batch","handleClick","disabled","buttonUserPosition","bottom","Main","size","NearMe","setLocation","setLocationError","navigator","geolocation","getCurrentPosition","CssBaseline","exact","path","initialState","JSON","parse","getItem","_id","state","action","savedCities","combineReducers","call","axios","get","stringify","put","console","message","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","window","getState","run","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d04f54d5.chunk.js","sourcesContent":["import novosibirsk from '../../images/citiesBG/novosibirsk.jpg';\r\nimport krasnoyarsk from '../../images/citiesBG/krasnoyarsk.jpg';\r\n\r\nexport default {\r\n  novosibirsk: {\r\n    backgroundImage: `url(${novosibirsk})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n  krasnoyarsk: {\r\n    backgroundImage: `url(${krasnoyarsk})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  }\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport backgrounds from '../cityBackgrounds';\r\n\r\nconst drawerWidth = 360;\r\n\r\nexport default makeStyles(theme => ({\r\n  ...backgrounds,\r\n  root: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  rootPaper: {\r\n    width: drawerWidth\r\n  },\r\n  header: {\r\n    position: 'relative',\r\n    height: 200,\r\n  },\r\n  searchContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: theme.spacing(3),\r\n    padding: '5px 10px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.shape.borderRadius * 2,\r\n    border: '1px solid #ccc',\r\n  },\r\n  search: {\r\n    width: '86%'\r\n  },\r\n  darkBG: {\r\n    paddingTop: 1,\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, .5)',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    overflowX: 'hidden',\r\n    margin: theme.spacing(1),\r\n  },\r\n  cityName: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text,\r\n  },\r\n  emblemContainer: {\r\n    display: 'none',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  changeCityButton: {\r\n    color: theme.palette.text,\r\n  },\r\n\r\n  [theme.breakpoints.up('md')]: {\r\n    root: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    cityName: {\r\n      color: '#fff',\r\n    },\r\n    emblemContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 40,\r\n      height: 40,\r\n      background: '#fff',\r\n      borderRadius: '50%',\r\n    },\r\n    emblem: {\r\n      height: 30,\r\n    },\r\n    changeCityButton: {\r\n      color: '#fff',\r\n    }\r\n  },\r\n}));\r\n","import novosibirsk from '../../../images/emblems/novosibirsk.svg';\r\nimport krasnoyarsk from '../../../images/emblems/krasnoyarsk.svg';\r\n\r\nexport default {\r\n  novosibirsk,\r\n  krasnoyarsk,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Typography,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport { Edit as EditIcon } from '@material-ui/icons';\r\nimport useStyles from './styles';\r\nimport emblems from './emblems';\r\n\r\nfunction Geo(props) {\r\n  const {\r\n    fetchCities,\r\n    setModal,\r\n    loading,\r\n    city,\r\n    titleCity,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (loading) fetchCities();\r\n  }, [loading, fetchCities]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.emblemContainer}>\r\n        <img className={classes.emblem} src={emblems[titleCity]} alt=\"\" />\r\n      </div>\r\n      <Typography variant=\"h6\" className={classes.cityName}>{city}</Typography>\r\n      <div className={classes.grow} />\r\n      <IconButton onClick={() => setModal(true)}>\r\n        <EditIcon className={classes.changeCityButton} />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nGeo.propTypes = {\r\n  fetchCities: PropTypes.func.isRequired,\r\n  setModal: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  titleCity: PropTypes.string.isRequired,\r\n  city: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Geo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Drawer,\r\n  Hidden,\r\n  InputBase\r\n} from '@material-ui/core';\r\nimport cn from 'classnames';\r\nimport makeStyles from './styles';\r\nimport LogoDark from '../../../images/logo_dark.svg';\r\nimport Geo from '../Geo';\r\n\r\nfunction DesctopMenu(props) {\r\n  const {\r\n    selectedCity,\r\n    loading,\r\n    fetchCities,\r\n    setModal,\r\n  } = props;\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <Hidden smDown implementation=\"css\">\r\n      <Drawer\r\n          variant=\"permanent\"\r\n          className={classes.root}\r\n          classes={{\r\n            paper: classes.rootPaper\r\n          }}\r\n        >\r\n          <div className={cn(classes.header, classes[selectedCity.title])}>\r\n            <div className={classes.darkBG}>\r\n              <div className={classes.searchContainer}>\r\n                <img src={LogoDark} alt=\"\" height=\"35px\" />\r\n                <InputBase\r\n                  className={classes.search}\r\n                  placeholder=\"Поиск по Crime Maps...\"\r\n                />\r\n              </div>\r\n              <Geo\r\n                loading={loading}\r\n                fetchCities={fetchCities}\r\n                setModal={setModal}\r\n                titleCity={selectedCity.title}\r\n                city={selectedCity.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n    </Hidden>\r\n  );\r\n}\r\n\r\nDesctopMenu.propTypes = {\r\n  selectedCity: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  fetchCities: PropTypes.func.isRequired,\r\n  setModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DesctopMenu;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst width = \"80%\";\r\nconst index = 1000;\r\n\r\nexport default makeStyles(theme => ({\r\n  openButton: {\r\n    position: 'absolute',\r\n    top: theme.spacing(1),\r\n    left: theme.spacing(1),\r\n    zIndex: index,\r\n  },\r\n  root: {\r\n    width,\r\n    zIndex: index + 1\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n    paddingRight: theme.spacing(0),\r\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(1),\r\n    color: '#fff'\r\n  },\r\n  logo: {\r\n    height: 30\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  closeMenuButton: {\r\n    color: '#fff'\r\n  }\r\n}));\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Hidden,\r\n  SwipeableDrawer,\r\n  Fab,\r\n  Typography,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {\r\n  Menu as MenuIcon,\r\n  ArrowBackIos as ArrowIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './styles';\r\nimport LogoDark from '../../../images/logo_dark.svg';\r\nimport Geo from '../Geo';\r\n\r\nfunction MobileMenu(props) {\r\n  const {\r\n    loading,\r\n    fetchCities,\r\n    setModal,\r\n    selectedCity,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggleMenu = value => setOpen(value);\r\n\r\n  return (\r\n    <Hidden mdUp implementation=\"css\">\r\n      <Fab className={classes.openButton} onClick={() => toggleMenu(true)}>\r\n        <MenuIcon />\r\n      </Fab>\r\n\r\n      <SwipeableDrawer\r\n        open={isOpen}\r\n        onOpen={() => toggleMenu(true)}\r\n        onClose={() => toggleMenu(false)}\r\n        className={classes.root}\r\n        classes={{ paper: classes.root }}\r\n      >\r\n        <div className={classes.header}>\r\n          <img src={LogoDark} alt=\"\" className={classes.logo} />\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Crime Maps\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <IconButton className={classes.closeMenuButton} onClick={() => toggleMenu(false)}>\r\n            <ArrowIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Geo\r\n          loading={loading}\r\n          fetchCities={fetchCities}\r\n          setModal={setModal}\r\n          titleCity={selectedCity.title}\r\n          city={selectedCity.name}\r\n        />\r\n      </SwipeableDrawer>\r\n    </Hidden>\r\n  );\r\n}\r\n\r\nMobileMenu.propTypes = {\r\n  fetchCities: PropTypes.func.isRequired,\r\n  setModal: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  selectedCity: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MobileMenu;\r\n","import {\r\n  ADD,\r\n  FETCH_CITIES,\r\n  MODAL,\r\n  ERROR,\r\n  LOADING,\r\n  CHANGE_CITY,\r\n} from '../actions/cities';\r\n\r\nexport const setCities = cities => ({ type: ADD, cities });\r\nexport const fetchCities = () => ({ type: FETCH_CITIES });\r\nexport const setModal = isOpen => ({ type: MODAL, isOpen});\r\nexport const setError = error => ({ type: ERROR, error });\r\nexport const setLoading = loading => ({ type: LOADING, loading });\r\nexport const changeCity = id => ({ type: CHANGE_CITY, id });\r\n","export const ADD = 'ADD';\r\nexport const FETCH_CITIES = 'FETCH_CITIES';\r\nexport const MODAL = 'MODAL';\r\nexport const ERROR = 'ERROR';\r\nexport const LOADING = 'LOADING';\r\nexport const CHANGE_CITY = 'CHANGE_CITY';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport DesctopMenu from './Desctop';\r\nimport Mobile from './Mobile';\r\nimport { fetchCities, setModal } from '../../store/AC/cities';\r\n\r\nfunction Menu(props) {\r\n  const {\r\n    fetchCities,\r\n    setModal,\r\n    selectedCityId,\r\n    citiesList,\r\n    loading,\r\n  } = props;\r\n\r\n  const selectedCity = citiesList.find(city => city.id === selectedCityId);\r\n\r\n  return (\r\n    <nav>\r\n      <DesctopMenu\r\n        selectedCity={selectedCity}\r\n        loading={loading}\r\n        fetchCities={fetchCities}\r\n        setModal={setModal}\r\n      />\r\n      <Mobile\r\n        selectedCity={selectedCity}\r\n        loading={loading}\r\n        fetchCities={fetchCities}\r\n        setModal={setModal}\r\n      />\r\n    </nav>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  fetchCities: PropTypes.func.isRequired,\r\n  setModal: PropTypes.func.isRequired,\r\n  selectedCityId: PropTypes.number.isRequired,\r\n  citiesList: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ cities: { selectedCity, data, loading } }) => ({\r\n  selectedCityId: selectedCity,\r\n  citiesList: data,\r\n  loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  fetchCities,\r\n  setModal,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Map as LeafletMap, TileLayer, Marker } from 'react-leaflet';\r\n\r\nfunction Map(props) {\r\n  const { lat, lng, geodata } = props;\r\n\r\n  return (\r\n    <LeafletMap\r\n        center={[lat, lng]}\r\n        zoom={13}\r\n        maxZoom={17}\r\n        attributionControl={true}\r\n        zoomControl={false}\r\n        doubleClickZoom={true}\r\n        scrollWheelZoom={true}\r\n        dragging={true}\r\n        animate={true}\r\n        easeLinearity={0.35}\r\n      >\r\n        <TileLayer\r\n          url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        />\r\n        {\r\n          geodata ?\r\n            <Marker position={[geodata.coords.latitude, geodata.coords.longitude]}>\r\n              \r\n            </Marker>\r\n            : null\r\n        }\r\n      </LeafletMap>\r\n  );\r\n}\r\n\r\nMap.propTypes = {\r\n  lat: PropTypes.number.isRequired,\r\n  lng: PropTypes.number.isRequired,\r\n  geodata: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = ({ map, geodata }) => ({\r\n  lat: map.lat,\r\n  lng: map.lng,\r\n  geodata: geodata.geodata,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Map);\r\n","import { CHANGE_COORDINATES } from '../actions/map';\r\n\r\nexport const changeCoordinates = (lat, lng) => ({ type: CHANGE_COORDINATES, lat, lng });\r\n","export const CHANGE_COORDINATES = 'CHANGE_COORDINATES';\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  title: {\r\n    position: 'relative',\r\n    backgroundColor: '#eee',\r\n    borderBottom: '1px solid #cecece',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n  loadingText: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  rotate: {\r\n    animation: '$rotate 1s infinite',\r\n  },\r\n  '@keyframes rotate': {\r\n    '0%': {\r\n      transform: 'rotate(0deg)',\r\n    },\r\n    '100%': {\r\n      transform: 'rotate(-360deg)',\r\n    },\r\n  },\r\n  actions: {\r\n    backgroundColor: '#eee',\r\n    borderTop: '1px solid #cecece',\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect, batch } from 'react-redux';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport {\r\n  Close as CloseIcon,\r\n  Loop as LoopIcon,\r\n  Check as CheckIcon,\r\n} from '@material-ui/icons';\r\nimport { setModal, changeCity } from '../../store/AC/cities';\r\nimport { changeCoordinates } from '../../store/AC/map';\r\nimport useStyles from './styles';\r\n\r\nfunction CitiesSelector(props) {\r\n  const [selectedCityId, setSelectedCityId] = useState(null);\r\n  const handleClick = id => {\r\n    const city = cities.find(city => city.id === id);\r\n    localStorage.setItem('selectedCity', id);\r\n    batch(() => {\r\n      changeCity(id);\r\n      setModal(false);\r\n      changeCoordinates(city.lat, city.lng);\r\n    });\r\n  };\r\n  const classes = useStyles();\r\n  const {\r\n    isOpen,\r\n    loading,\r\n    setModal,\r\n    cities,\r\n    changeCity,\r\n    changeCoordinates,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={() => setModal(false)}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        Выберите город\r\n        <IconButton onClick={() => setModal(false)} className={classes.closeButton}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {\r\n          loading && (\r\n            <Typography variant=\"h6\" color=\"textSecondary\" className={classes.loadingText}>\r\n              Загрузка списка городов\r\n              <LoopIcon className={classes.rotate} />\r\n            </Typography>\r\n          )\r\n        }\r\n        {\r\n          !loading && (\r\n            <List component=\"nav\">\r\n              {\r\n                cities.map(city =>\r\n                  <ListItem\r\n                    button\r\n                    key={city.id}\r\n                    selected={city.id === selectedCityId}\r\n                    onClick={() => setSelectedCityId(city.id)}\r\n                  >\r\n                    <ListItemText>{city.name}</ListItemText>\r\n                    {\r\n                      city.id === selectedCityId &&\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton>\r\n                            <CheckIcon />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    }\r\n                  </ListItem>\r\n                )\r\n              }\r\n            </List>\r\n          )\r\n        }\r\n      </DialogContent>\r\n      <DialogActions className={classes.actions}>\r\n        <Button onClick={() => handleClick(selectedCityId)} disabled={selectedCityId === null}>Подтвердить</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nCitiesSelector.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  cities: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  setModal: PropTypes.func.isRequired,\r\n  changeCity: PropTypes.func.isRequired,\r\n  changeCoordinates: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ cities: {\r\n  isSelectorOpen,\r\n  data,\r\n  loading,\r\n  error,\r\n}}) => ({\r\n  isOpen: isSelectorOpen,\r\n  cities: data,\r\n  loading,\r\n  error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  setModal,\r\n  changeCity,\r\n  changeCoordinates,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesSelector);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  buttonUserPosition: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(3),\r\n    right: theme.spacing(3),\r\n    zIndex: 1000\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\nimport { NearMe as NearMeIcon } from '@material-ui/icons';\r\nimport Menu from '../../components/Menu';\r\nimport Map from '../../components/Map';\r\nimport CitiesSelector from '../../components/CitiesSelector';\r\nimport useStyles from './styles';\r\n\r\nfunction Main() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Menu />\r\n      <Map />\r\n      <CitiesSelector />\r\n      <Fab\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.buttonUserPosition}\r\n      >\r\n        <NearMeIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { SET_LOCATION, SET_LOCATION_ERROR } from '../actions/geodata';\r\n\r\nexport const setLocation = data => ({ type: SET_LOCATION, data });\r\nexport const setLocationError = error => ({ type: SET_LOCATION_ERROR, error });\r\n","export const SET_LOCATION = 'SET_LOCATION';\r\nexport const SET_LOCATION_ERROR = 'SET_LOCATION_ERROR';\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from '../Main';\r\nimport { setLocation, setLocationError } from '../../store/AC/geodata';\r\n\r\nfunction App(props) {\r\n  const { setLocation, setLocationError} = props;\r\n  \r\n  navigator.geolocation.getCurrentPosition(setLocation, setLocationError);\r\n\r\n  return (\r\n    <Fragment>\r\n      <CssBaseline />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  setLocation: PropTypes.func.isRequired,\r\n  setLocationError: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  setLocation,\r\n  setLocationError,\r\n}, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import {\r\n  ADD,\r\n  MODAL,\r\n  ERROR,\r\n  LOADING,\r\n  CHANGE_CITY,\r\n} from '../actions/cities';\r\n\r\nconst initialState = {\r\n  data: JSON.parse(localStorage.getItem('citiesList')) || [{ _id: '5e8f0f4f8883b725cc275bad', id: 1, title: 'novosibirsk', name: 'Новосибирск', lat: 55.0415, lng: 82.9346 }],\r\n  isSelectorOpen: false,\r\n  error: false,\r\n  loading: true,\r\n  selectedCity: +localStorage.getItem('selectedCity') || 1,\r\n};\r\n\r\nfunction cities(state = initialState, action) {\r\n  switch(action.type) {\r\n    case ADD:\r\n      return {...state, data: action.cities};\r\n    case MODAL:\r\n      return {...state, isSelectorOpen: action.isOpen};\r\n    case ERROR:\r\n      return {...state, error: action.error};\r\n    case LOADING:\r\n      return {...state, loading: action.loading};\r\n    case CHANGE_CITY:\r\n      return {...state, selectedCity: action.id};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cities;\r\n","import { CHANGE_COORDINATES } from '../actions/map';\r\n\r\nconst selectedCity = +JSON.parse(localStorage.getItem('selectedCity'));\r\nconst savedCities = JSON.parse(localStorage.getItem('citiesList'));\r\nlet lat;\r\nlet lng;\r\n\r\nif (selectedCity && savedCities) {\r\n  const city = savedCities.find(city => city.id === selectedCity);\r\n  lat = city.lat;\r\n  lng = city.lng;\r\n} else {\r\n  lat = 55.0415;\r\n  lng = 82.9346;\r\n}\r\n\r\nconst initialState = {\r\n  lat,\r\n  lng,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case CHANGE_COORDINATES:\r\n      return { ...state, lat: action.lat, lng: action.lng };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_LOCATION, SET_LOCATION_ERROR } from '../actions/geodata';\r\n\r\nconst initialState = {\r\n  geodata: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOCATION:\r\n      return {...state, geodata: action.data};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport cities from './cities';\r\nimport map from './map';\r\nimport geodata from './geodata';\r\n\r\nexport default combineReducers({\r\n  cities,\r\n  map,\r\n  geodata,\r\n});\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FETCH_CITIES } from '../actions/cities';\r\nimport { setCities, setError, setLoading } from '../AC/cities';\r\n\r\nfunction* fetchCities() {\r\n  try {\r\n    const { data } = yield call(axios.get, '/api/cities/');\r\n    localStorage.setItem('citiesList', JSON.stringify(data));\r\n    yield put(setCities(data));\r\n    yield put(setError(false));\r\n    yield put(setLoading(false));\r\n  } catch(error) {\r\n    console.error(error.message);\r\n    yield put(setError(true));\r\n  }\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(FETCH_CITIES, fetchCities);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport cities from './cities';\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    cities()\r\n  ]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nwindow.getState = store.getState;\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './containers/App';\r\nimport store from './store';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_dark.6ea33164.svg\";","module.exports = __webpack_public_path__ + \"static/media/novosibirsk.3223fede.jpg\";","module.exports = __webpack_public_path__ + \"static/media/krasnoyarsk.aaf9cd5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/novosibirsk.f2328259.svg\";","module.exports = __webpack_public_path__ + \"static/media/krasnoyarsk.0bba5569.svg\";"],"sourceRoot":""}